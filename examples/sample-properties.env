project='cp-3353070'
cadence='2024.11'
ingressHost='cp-3353070.apps.sasfd.westus.aroapp.io'
imagePullSecret='registry-nonprod'
imageRegistry='acrce34aa65ifgei.azurecr.io/viya-4-x64_oci_linux_2-docker'
scrImageName='credit:latest'
rwxStorageClass='odf-encrypted-rwx'
rwoStorageClass='odf-storagecluster-ceph-rbd'
enableHA='false'
sfdAdminUserId='user1'
clusterPreReqCheck='true'
#tlsMode can be off|front-door|full-stack
tlsMode='front-door'

#Runtime configuration
goOdeCpu='2'
goOdeMemory='4Gi'
scrCpu='2'
scrMemory='4Gi'
minRuntimeReplicas='1'
maxRuntimeReplicas='1'
scaleRuntimeTargetCpuUtilization='50'
minRuntimePDB='1'

#Active Directory
adHost='adhost.example.com'
adPort='689'
adUserDN='cn=user,dc=example,dc=com'
adPasswd='user-password'
adGroupBaseDN='ou=groups,dc=example,dc=com'
adUserBaseDN='ou=people,dc=example,dc=com'
adUserObjectFilter='(objectClass=inetOrgPerson)(memberOf=cn=users,ou=groups,dc=example,dc=com)'


#Single Sign On - oauth
oauthAuthUrl='https://examplesso.com/oauth2/authserver/v1/authorize'
oauthDiscoveryUrl='https://examplesso.com/oauth2/authserver/.well-known/openid-configuration'
oauthTokenUrl='https://examplesso.com/oauth2/authserver/v1/token'
oauthClientId='oauth-clientid'
oauthClientSecret='oauth-client-secret-csdrwerwer'
oauthName='ping_oidc'
oauthAttributeMappingUserName='sub'
oauthScopes='openid'
oauthResponseType='code'

#REDIS
redisHost='10.0.0.1' #IP address or hostname
redisPort='10000'
redisTlsEnabled='false'
redisServerDomain='redis.example.com'
redisUser='redisusername'
redisPassword='redispassword'
redisProfileCompress='false'

#KAFKA
kafkaHost='kafka.example.com'
kafkaPort='9099'
kafkaBypass='false'
kafkaConsumerEnabled='false'
kafkaConsumerTopic='transactions-incoming'
kafkaTdrTopic='transactions-repository'
kafkaRejectTopic='transactions-reject'
kafkaSecurityProtocol='SSL' #PLAINTEXT, SSL, SASL_PLAINTEXT, SASL_SSL
kafkaHostnameVerify='false'
#kafkaSaslUsername='kafkausername'
#kafkaSaslPassword='kafkapassword'
kafkaClientCertificate='strimziClientCa.pem' #This file should exist in ca-certificates folder
kafkaClientPrivateKey='strimziClientCa.key' #This file should exist in ca-certificates folder
kafkaTrustStore='strimziClusterCa.pem' #This file should exist in ca-certificates folder

#Path to dir containing customer provided CA certificates in PEM format
customerCaCertsDir='./ca-certificates'
