---
apiVersion: builtin
kind: PatchTransformer
metadata:
  name: sasfd-runtime-sidecar-scr
patch: |-
  - op: add
    path: /spec/template/spec/containers/0/envFrom/-
    value:
      secretRef:
        name: sas-detection-datastore-secrets
  - op: add
    path: /spec/template/spec/containers/0/envFrom/-
    value:
      configMapRef:
        name: sas-detection-datastore-config
  - op: add
    path: /spec/template/spec/containers/0/envFrom/-
    value:
      configMapRef:
        name: sas-detection-config
  - op: replace
    path: /spec/template/spec/containers/0/ports/0/containerPort
    value: 8777
  - op: replace
    path: /spec/template/metadata/annotations/prometheus.io~1port
    value: "8777"
  - op: replace
    path: /spec/template/metadata/annotations/prometheus.io~1path
    value: "/detection/metrics"
  - op: add
    path: /spec/template/spec/containers/0/volumeMounts/-
    value:
      name: customer-provided-ca-certificates
      mountPath: /customer-provided-ca-certificates
  - op: replace
    path: /spec/template/spec/containers/0/resources/limits/cpu
    value: $goOdeCpu
  - op: replace
    path: /spec/template/spec/containers/0/resources/requests/cpu
    value: $goOdeCpu
  - op: replace
    path: /spec/template/spec/containers/0/resources/limits/memory
    value: $goOdeMemory
  - op: replace
    path: /spec/template/spec/containers/0/resources/requests/memory
    value: $goOdeMemory
  - op: add
    path: /spec/template/spec/containers/-
    value:
      name: sas-sda-scr
      image: ${scrRegistryUrl}
      imagePullPolicy: "Always"
      ports:
        - name: http
          containerPort: 8080
          protocol: TCP
      env:
      - name: SAS_SCR_LOG_LEVEL_App.tk.MAS.Detection.Detect.DS2
        value: DEBUG
      - name: SAS_SCR_LOG_LEVEL_App.tk.Detection
        value: INFO
      - name: PORT
        value: "8080"
      envFrom:
      - configMapRef:
          name: sas-detection-datastore-config
      - secretRef:
          name: sas-detection-datastore-secrets
      resources:
        limits:
          cpu: $scrCpu
          memory: $scrMemory
        requests:
          cpu: $scrCpu
          memory: $scrMemory
      lifecycle:
        preStop:
          exec:
            command:
            - sh
            - -c
            - sleep 5
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /internal/live
          port: http
          scheme: HTTP
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 5
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /internal/ready
          port: http
          scheme: HTTP
        periodSeconds: 20
        successThreshold: 1
        timeoutSeconds: 1
      startupProbe:
        failureThreshold: 180
        httpGet:
          path: /internal/live
          port: http
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      volumeMounts:
      - mountPath: /customer-provided-ca-certificates
        name: customer-provided-ca-certificates
      - mountPath: /security
        name: security
      - mountPath: /tmp
        name: tmp
target:
  group: apps
  kind: Deployment
  name: sas-detection
  version: v1
---
apiVersion: builtin
kind: PatchTransformer
metadata:
  name: sasfd-runtime-hpa-patch
patch: |-
  - op: replace
    path: /spec/maxReplicas
    value: $maxRuntimeReplicas
  - op: replace
    path: /spec/minReplicas
    value: $minRuntimeReplicas
  - op: replace
    path: /spec/metrics/0/resource/target/averageUtilization
    value: $scaleRuntimeTargetCpuUtilization
target:
  group: autoscaling
  kind: HorizontalPodAutoscaler
  name: sas-detection
  version: v2
---
apiVersion: builtin
kind: PatchTransformer
metadata:
  name: sasfd-runtime-pdb-patch
patch: |-
  - op: replace
    path: /spec/minAvailable
    value: $minRuntimePDB
target:
  group: policy
  kind: PodDisruptionBudget
  name: sas-detection
  version: v1
